{"version":3,"sources":["components/Stat.tsx","components/Roll.tsx","github.svg","App.tsx","serviceWorker.ts","index.tsx"],"names":["useStyles","makeStyles","theme","mainStat","fontSize","marginBottom","scoreColorThresholds","rollColorThresholds","getColorForScore","score","i","length","threshold","color","getColorForRoll","roll","Stat","stat","classes","Typography","className","style","total","modifierString","unusedNumbers","map","n","Chip","key","sortOrder","label","result","size","borderColor","variant","usedNumbers","backgroundColor","formTitle","marginRight","paper","marginTop","spacing","display","flexDirection","alignItems","title","flexGrow","radioGroup","characterTotal","d6","Math","floor","random","rollScore","sort","totalScore","s","slice","reduce","accumulator","v","scoreModifier","rollCharacter","convertFunction","a","b","totalCharacterScoreAbsolute","c","totalCharacterScoreModifier","describeCharacter","stats","rolledCharacter","index","modifier","idx","describeScore","rollOrdinalNumber","Roll","useState","list","rollsState","setRollsState","rolling","setRolling","comparisonMethod","setComparisonMethod","rollBetterCharacterOrDoNothing","useCallback","newCharacter","newOrdinalNumber","useEffect","timer","setInterval","clearInterval","Snackbar","open","anchorOrigin","vertical","horizontal","message","action","CircularProgress","AppBar","position","Toolbar","FormControl","component","RadioGroup","value","onChange","e","target","FormControlLabel","control","Radio","Button","onClick","disabled","Container","maxWidth","Paper","elevation","Table","TableHead","TableRow","TableCell","width","align","colSpan","TableBody","cd","_extends","Object","assign","arguments","source","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_ref2","createElement","fillRule","clipRule","d","transform","fill","_ref","svgRef","props","height","viewBox","ref","ForwardRef","forwardRef","createMuiTheme","palette","secondary","green","footerInfo","bottom","top","footerTitle","footerGithub","footerGithubText","githubIcon","App","ThemeProvider","Link","href","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.eb0534e2.chunk.js","sourcesContent":["import React from \"react\";\n\nimport { Chip, Typography, makeStyles } from \"@material-ui/core\";\n\nimport { statDescription } from \"../types/roll\";\n\ntype StatProps = {\n  stat: statDescription;\n};\n\nconst useStyles = makeStyles((theme) => ({\n  mainStat: {\n    fontSize: \"24px\",\n    marginBottom: \"10px\",\n  },\n}));\n\ntype colorMapping = [number, string];\n\nconst scoreColorThresholds: Array<colorMapping> = [\n  [18, \"#00F800\"],\n  [16, \"#00E54B\"],\n  [14, \"#00D4B0\"],\n  [12, \"#00B7D8\"],\n  [10, \"#188AF0\"],\n  [0, \"#146CF6\"],\n];\n\nconst rollColorThresholds: Array<colorMapping> = [\n  [6, \"#00F800\"],\n  [5, \"#00E54B\"],\n  [4, \"#00D4B0\"],\n  [3, \"#00B7D8\"],\n  [2, \"#188AF0\"],\n  [1, \"#146CF6\"],\n];\n\nconst getColorForScore = (score: number): string => {\n  for (let i = 0; i < scoreColorThresholds.length; i++) {\n    const [threshold, color] = scoreColorThresholds[i];\n    if (score >= threshold) {\n      return color;\n    }\n  }\n  return \"#000000\";\n};\n\nconst getColorForRoll = (roll: number): string => {\n  for (let i = 0; i < rollColorThresholds.length; i++) {\n    const [threshold, color] = rollColorThresholds[i];\n    if (roll >= threshold) {\n      return color;\n    }\n  }\n  return \"#000000\";\n};\n\nconst Stat = ({ stat }: StatProps) => {\n  const classes = useStyles();\n  return (\n    <>\n      <Typography\n        className={classes.mainStat}\n        style={{ color: getColorForScore(stat.total) }}\n      >\n        {`${stat.total} (${stat.modifierString})`}\n      </Typography>\n      {stat.unusedNumbers.map((n) => (\n        <Chip\n          key={n.sortOrder}\n          label={n.result}\n          size=\"small\"\n          style={{ borderColor: getColorForRoll(n.result) }}\n          variant=\"outlined\"\n        />\n      ))}\n      {stat.usedNumbers.map((n) => (\n        <Chip\n          key={n.sortOrder}\n          label={n.result}\n          style={{ backgroundColor: getColorForRoll(n.result) }}\n          size=\"small\"\n        />\n      ))}\n    </>\n  );\n};\n\nexport default Stat;\n","import React, { useState, useCallback, useEffect } from \"react\";\nimport {\n  Button,\n  Snackbar,\n  CircularProgress,\n  AppBar,\n  Toolbar,\n  Typography,\n  Container,\n  Paper,\n  makeStyles,\n  Radio,\n  RadioGroup,\n  FormControlLabel,\n  FormControl,\n  Table,\n  TableRow,\n  TableHead,\n  TableBody,\n  TableCell,\n} from \"@material-ui/core\";\n\nimport { score, character, characterRoll } from \"../types/roll\";\nimport Stat from \"./Stat\";\n\ntype rollState = {\n  list: Array<characterRoll>;\n  rollOrdinalNumber: number;\n};\n\nconst useStyles = makeStyles((theme) => ({\n  formTitle: {\n    marginRight: \"15px\",\n  },\n  paper: {\n    marginTop: theme.spacing(12),\n    marginBottom: theme.spacing(12),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  title: {\n    flexGrow: 1,\n  },\n  radioGroup: {\n    flexDirection: \"row\",\n  },\n  characterTotal: {\n    fontSize: \"28px\",\n  },\n}));\n\nconst d6 = (): number => Math.floor(Math.random() * 6) + 1;\n\nconst rollScore = (): score => [0, 0, 0, 0].map(d6).sort() as score;\n\nconst totalScore = (s: score) =>\n  s.slice(1).reduce((accumulator, v) => accumulator + v);\n\nconst scoreModifier = (s: score) =>\n  Math.floor((s.slice(1).reduce((accumulator, v) => accumulator + v) - 10) / 2);\n\nconst describeScore = (s: score, sortOrder: number) => {\n  const modifier = scoreModifier(s);\n  return {\n    total: totalScore(s),\n    usedNumbers: s.slice(1).map((n, idx) => ({ result: n, sortOrder: idx })),\n    unusedNumbers: s\n      .slice(0, 1)\n      .map((n, idx) => ({ result: n, sortOrder: idx })),\n    modifier,\n    modifierString: modifier >= 0 ? `+${modifier}` : `${modifier}`,\n    sortOrder: sortOrder,\n  };\n};\n\nconst makeSortFunction = <T extends unknown>(\n  convertFunction: (a: T) => number\n) => {\n  return (a: T, b: T) => {\n    if (convertFunction(a) < convertFunction(b)) {\n      return -1;\n    }\n    if (convertFunction(a) > convertFunction(b)) {\n      return 1;\n    }\n    return 0;\n  };\n};\n\nconst rollCharacter = (): character =>\n  [null, null, null, null, null, null]\n    .map(rollScore)\n    .sort(makeSortFunction(totalScore)) as character;\n\nconst totalCharacterScoreAbsolute = (c: character) =>\n  c.map((s) => totalScore(s)).reduce((accumulator, v) => accumulator + v);\n\nconst totalCharacterScoreModifier = (c: character) =>\n  c.map((s) => scoreModifier(s)).reduce((accumulator, v) => accumulator + v);\n\nconst describeCharacter = (c: characterRoll) => ({\n  stats: c.rolledCharacter.map((s, index) => describeScore(s, index)),\n  rollOrdinalNumber: c.rollOrdinalNumber,\n  rolledCharacter: c.rolledCharacter,\n});\n\nconst Roll = () => {\n  const classes = useStyles();\n\n  const [rollsState, setRollsState] = useState<rollState>({\n    list: [\n      {\n        rolledCharacter: rollCharacter(),\n        rollOrdinalNumber: 1,\n      },\n    ],\n    rollOrdinalNumber: 1,\n  });\n\n  const [rolling, setRolling] = useState<boolean>(false);\n  const [comparisonMethod, setComparisonMethod] = useState<\n    (c: character) => number\n  >(() => totalCharacterScoreAbsolute);\n\n  const rollBetterCharacterOrDoNothing = useCallback(() => {\n    const newCharacter = rollCharacter();\n    const newOrdinalNumber = rollsState.rollOrdinalNumber + 1;\n    if (\n      comparisonMethod(newCharacter) >\n      comparisonMethod(\n        rollsState.list[rollsState.list.length - 1].rolledCharacter\n      )\n    ) {\n      setRollsState({\n        list: [\n          ...rollsState.list,\n          {\n            rolledCharacter: newCharacter,\n            rollOrdinalNumber: newOrdinalNumber,\n          },\n        ],\n        rollOrdinalNumber: newOrdinalNumber,\n      });\n      return true;\n    } else {\n      setRollsState({\n        ...rollsState,\n        rollOrdinalNumber: newOrdinalNumber,\n      });\n      return false;\n    }\n  }, [rollsState, comparisonMethod]);\n\n  useEffect(() => {\n    if (rolling) {\n      const timer = setInterval(() => {\n        if (rollBetterCharacterOrDoNothing()) {\n          setRolling(false);\n        }\n      }, 0);\n      return () => clearInterval(timer);\n    }\n  }, [rolling, rollBetterCharacterOrDoNothing, setRolling]);\n\n  return (\n    <>\n      <Snackbar\n        open={rolling}\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"center\",\n        }}\n        message={`Working - roll number ${rollsState.rollOrdinalNumber}`}\n        action={<CircularProgress />}\n      />\n      <AppBar position=\"fixed\">\n        <Toolbar>\n          <Typography variant=\"h6\" className={classes.title}>\n            Humble character generator\n          </Typography>\n          <Typography variant=\"body1\" className={classes.formTitle}>\n            Total:\n          </Typography>\n          <FormControl component=\"fieldset\">\n            <RadioGroup\n              className={classes.radioGroup}\n              value={\n                comparisonMethod === totalCharacterScoreAbsolute\n                  ? \"absolute\"\n                  : \"modifier\"\n              }\n              onChange={(e) => {\n                if (e.target.value === \"modifier\") {\n                  setComparisonMethod(() => totalCharacterScoreModifier);\n                } else {\n                  setComparisonMethod(() => totalCharacterScoreAbsolute);\n                }\n              }}\n            >\n              <FormControlLabel\n                value=\"absolute\"\n                control={<Radio />}\n                label=\"Score\"\n              />\n              <FormControlLabel\n                value=\"modifier\"\n                control={<Radio />}\n                label=\"Modifier\"\n              />\n            </RadioGroup>\n          </FormControl>\n          <Button\n            variant=\"contained\"\n            onClick={() => setRolling(true)}\n            color=\"secondary\"\n            disabled={rolling}\n          >\n            Roll better character\n          </Button>\n        </Toolbar>\n      </AppBar>\n      <Container component=\"main\" maxWidth=\"lg\">\n        <Paper elevation={3} className={classes.paper}>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell width=\"64px\">#</TableCell>\n                <TableCell align=\"center\" colSpan={6}>\n                  Result\n                </TableCell>\n                <TableCell width=\"64px\">Total</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {rollsState.list\n                .map((c) => describeCharacter(c))\n                .map((cd) => (\n                  <TableRow key={cd.rollOrdinalNumber}>\n                    <TableCell>{cd.rollOrdinalNumber}</TableCell>\n                    {cd.stats.map((s) => (\n                      <TableCell key={s.sortOrder} align=\"center\">\n                        <Stat stat={s} />\n                      </TableCell>\n                    ))}\n                    <TableCell>\n                      <Typography className={classes.characterTotal}>\n                        {comparisonMethod(cd.rolledCharacter)}\n                      </Typography>\n                    </TableCell>\n                  </TableRow>\n                ))}\n            </TableBody>\n          </Table>\n        </Paper>\n      </Container>\n    </>\n  );\n};\n\nexport default Roll;\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  fillRule: \"evenodd\",\n  clipRule: \"evenodd\",\n  d: \"M8 0C3.58 0 0 3.58 0 8C0 11.54 2.29 14.53 5.47 15.59C5.87 15.66 6.02 15.42 6.02 15.21C6.02 15.02 6.01 14.39 6.01 13.72C4 14.09 3.48 13.23 3.32 12.78C3.23 12.55 2.84 11.84 2.5 11.65C2.22 11.5 1.82 11.13 2.49 11.12C3.12 11.11 3.57 11.7 3.72 11.94C4.44 13.15 5.59 12.81 6.05 12.6C6.12 12.08 6.33 11.73 6.56 11.53C4.78 11.33 2.92 10.64 2.92 7.58C2.92 6.71 3.23 5.99 3.74 5.43C3.66 5.23 3.38 4.41 3.82 3.31C3.82 3.31 4.49 3.1 6.02 4.13C6.66 3.95 7.34 3.86 8.02 3.86C8.7 3.86 9.38 3.95 10.02 4.13C11.55 3.09 12.22 3.31 12.22 3.31C12.66 4.41 12.38 5.23 12.3 5.43C12.81 5.99 13.12 6.7 13.12 7.58C13.12 10.65 11.25 11.33 9.47 11.53C9.76 11.78 10.01 12.26 10.01 13.01C10.01 14.08 10 14.94 10 15.21C10 15.42 10.15 15.67 10.55 15.59C13.71 14.53 16 11.53 16 8C16 3.58 12.42 0 8 0Z\",\n  transform: \"scale(64)\",\n  fill: \"#1B1F23\"\n});\n\nvar SvgGithub = function SvgGithub(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 1024,\n    height: 1024,\n    viewBox: \"0 0 1024 1024\",\n    fill: \"none\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgGithub, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/github.07883e93.svg\";\nexport { ForwardRef as ReactComponent };","import React from \"react\";\nimport Roll from \"./components/Roll\";\nimport { createMuiTheme } from \"@material-ui/core/styles\";\nimport { ThemeProvider } from \"@material-ui/styles\";\nimport { green } from \"@material-ui/core/colors\";\nimport {\n  makeStyles,\n  AppBar,\n  Typography,\n  Toolbar,\n  Link,\n} from \"@material-ui/core\";\nimport { ReactComponent as Github } from \"./github.svg\";\n\nconst theme = createMuiTheme({\n  palette: {\n    secondary: green,\n  },\n});\n\nconst useStyles = makeStyles((theme) => ({\n  footerInfo: {\n    bottom: \"0\",\n    top: \"auto\",\n  },\n  footerTitle: {\n    flexGrow: 1,\n  },\n  footerGithub: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n  footerGithubText: {\n    marginRight: \"15px\",\n  },\n  githubIcon: {\n    height: \"32px\",\n    width: \"32px\",\n  },\n}));\n\nconst App = () => {\n  const classes = useStyles();\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Roll />\n      <AppBar className={classes.footerInfo} position=\"fixed\" color=\"secondary\">\n        <Toolbar>\n          <Typography\n            variant=\"body1\"\n            title=\"Intended use: to amuse your DM if they argue that rolling as many times as you want is fine.\"\n            className={classes.footerTitle}\n          >\n            All rolls are executed by finely trained random number generator.\n          </Typography>\n          <Link\n            href=\"https://github.com/iharthi/humble-character-generator\"\n            className={classes.footerGithub}\n          >\n            <Typography variant=\"body1\" className={classes.footerGithubText}>\n              HCG is Open Sourcery\n            </Typography>\n            <Github className={classes.githubIcon} />\n          </Link>\n        </Toolbar>\n      </AppBar>\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}